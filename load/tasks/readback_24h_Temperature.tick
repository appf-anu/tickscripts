dbrp "chambers"."autogen"

var message_critok = '{{ if eq .Level "OK" }}[OK] {{ .ID }}{{ else }}[CRIT] {{ .ID }}{{ end }}'
var deets = 'past: {{index .Fields "hist.Temperature" | printf "%.1f"}}°C
 now: {{index .Fields "cur.Temperature" | printf "%.1f"}}°C
 diff: {{index .Fields "min.value" | printf "%.1f"}}°C (err ±2.0°C)'
 
var current = batch
  |query('select Temperature from chambers.autogen.conviron2 limit 6')
  .period(1h)
  .every(10m)
  .align()
  .groupBy('host')

// change this to take the lowest diff of the values rather than the diff of the mean.
var historical = batch
  |query('select Temperature from chambers.autogen.conviron2 limit 6')
    .period(1h)
    .every(10m)
    .offset(24h)
    .align()
    .groupBy('host')
  |shift(24h)

var joined = historical
  |join(current)
    .tolerance(5m)
    .as('historical', 'current')
  |eval(lambda: abs("current.Temperature" - "historical.Temperature"))
    .as('value')
    .keep('value', 'current.Temperature', 'historical.Temperature')


var mins = joined|min('value')
    .as('value')

var hist = joined|mean('historical.Temperature')
    .as('Temperature')

var cur = joined|mean('current.Temperature')
    .as('Temperature')

var njoined = hist
  |join(cur, mins)
    .as('hist','cur' ,'min')
  |alert()
    .crit(lambda: "min.value" > 2.0)
    .id('{{ index .Tags "host" }} Temporal Temperature difference')
    .message(message_critok)
    .details(deets)
    .topic('chambers')
    .exec('python3', '/etc/kapacitor/python/gitalert.py')
    .stateChangesOnly()
