dbrp "chambers"."autogen"

var message_critok = '{{ if eq .Level "OK" }}[OK] {{ .ID }}{{ else }}[CRIT] {{ .ID }}{{ end }}'

var deets = 'past: {{index .Fields "hist.Par" | printf "%.1f"}}
 now: {{index .Fields "cur.Par" | printf "%.1f"}}
 diff: {{index .Fields "min.value" | printf "%.1f"}}  (err = Â±10% {{index .Fields "max.tolerance" | printf "%.1f"}})'

var current = batch
  |query('select Par from chambers.autogen.conviron2 limit 6')
  .period(1h)
  .every(10m)
  .align()
  .groupBy('host')

var joined = batch
  |query('select Par from chambers.autogen.conviron2 limit 6')
    .period(1h)
    .every(10m)
    .offset(24h)
    .align()
    .groupBy('host')
  |shift(24h)
  |join(current)
    .tolerance(5m)
    .as('historical', 'current')
  |eval(lambda: abs("current.Par" - "historical.Par"))
    .as('value')
    .keep('historical.Par', 'current.Par', 'value')
  |eval(lambda: "historical.Par" * 0.1)
    .as('tolerance')
    .keep('value', 'tolerance', 'historical.Par', 'current.Par')

var mins  = joined|min('value')
      .as('value')
var maxs = joined|max('tolerance')
      .as('tolerance')
var hist = joined|mean('historical.Par')
      .as('Par')
var cur  = joined|mean('current.Par')
      .as('Par')

var njoined = hist
  |join(cur, mins, maxs)
    .as('hist','cur' ,'min', 'max')
  |alert()
    .crit(lambda: ("min.value" > "max.tolerance") AND "max.tolerance" > 15)
    .id('{{ index .Tags "host" }} Temporal PAR difference')
    .message(message_critok)
    .details(deets)
    .exec('python3', '/etc/kapacitor/python/gitalert.py')
    .stateChangesOnly()