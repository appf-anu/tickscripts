dbrp "chambers"."autogen"

var interval = 10m
var oneday = 24h

var message_deadok = '{{ if eq .Level "OK" }}[OK] {{ .ID }}{{ else }}[OFF] {{ .ID }}{{ end }}'
var message_critok = '{{ if eq .Level "OK" }}[OK] {{ .ID }}{{ else }}[CRIT] {{ .ID }}{{ end }}'


var data = stream
  |from()
    .retentionPolicy('autogen')
    .database('chambers')
    .measurement('conviron2')
    .groupBy('host')

var excess_light_alert = data
  |window()
    .align()
    .period(oneday)
    .every(interval)
    .fillPeriod()
  |min('Par')
    .as('MinPar')
  |alert()
    .crit(lambda: "MinPar" > 5.0)
    .id('{{ index .Tags "host" }} min 24h PAR')
    .message(message_critok)
    .details('min 24h PAR: {{ index .Fields "MinPar" }}')   
    .exec('python3', '/etc/kapacitor/python/gitalert.py')
    .stateChangesOnly()

var par_spread_alert = data
  |where(lambda: "group" == 'spc')
  |window()
    .align()
    .period(oneday)
    .every(interval)
    .fillPeriod()
  |spread('Par')
    .as('ParSpread')
  |alert()
    .crit(lambda: "ParSpread" < 5.0)
    .id('{{ index .Tags "host" }} spc 24h PAR spread')
    .message(message_critok)
    .details('PAR spread: {{ index .Fields "ParSpread" }}')
    .exec('python3', '/etc/kapacitor/python/gitalert.py')
    .stateChangesOnly()
