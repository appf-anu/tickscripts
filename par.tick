dbrp "chambers"."autogen"

var notifyusers = 'gdunstone,richardpoire,TimeScience,zarlo,pburrell2,appf-bot'

var oneday = 24h
var interval = 1h
var message_dead = '[OFF] PAR {{ .ID }} NO DATA'
var message_alive = '[OK] PAR {{ .ID }} HAS DATA'

var message_spread = '[CRIT] PAR {{ .ID }} SPREAD {{ index .Fields "par_spread" | printf "%.2f" }}'
var message_spread_ok = '[OK] PAR {{ .ID }} SPREAD'

var data = stream
  |from()
    .database('chambers')
    .retentionPolicy('autogen')
    .measurement('conviron')
    .groupBy(*)

var par_spread_alert = data
  |window()
    .fillPeriod()
    .align()
    .period(oneday)
    .every(interval)
  |spread('par')
    .as('par_spread')
  |alert()
    .crit(lambda: "par_spread" < 5.0)
    .id('{{ index .Tags "host" }} par spread')
    .message('{{ if eq .Level "OK" }}' + message_spread_ok + '{{ else }}' + message_spread + '{{ end }}.')
    .slack()
    .exec('python3', '/home/gareth/tickscripts/gitalert.py', notifyusers)
    .stateChangesOnly()

var dman = data
  |deadman(0.0, interval)
    .id('{{ index .Tags "host" }} par deadman')
    .message('{{ if eq .Level "OK" }}' + message_alive + '{{ else }}' + message_dead + '{{ end }}.')
    .slack()
    .exec('python3', '/home/gareth/tickscripts/gitalert.py', notifyusers)
    .stateChangesOnly()
